volumes:
  es01data:
  kibanadata:
  logstashdata:

networks:
  default:
    name: elastic
    external: false

services:

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    mem_limit: ${ES_MEM_LIMIT}
    volumes:
      - es01data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:9200 || exit 1",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
      - XPACK_APM_SERVICEMAPENABLED=true
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    mem_limit: ${KB_MEM_LIMIT}
    depends_on:
      es01:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
        "CMD-SHELL",
        "curl --fail http://localhost:5601 || exit 1",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    volumes:
      - logstashdata:/usr/share/logstash/data
      - ./data/logstash:/usr/share/logstash/pipeline:ro
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
    ports:
      - "9600:9600"
    mem_limit: ${KB_MEM_LIMIT}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail 'http://localhost:9600/?pretty' || exit 1",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  eureka:
    build: eureka-server-end
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGSTASH_ENDPOINT=${LOGSTASH_ENDPOINT}
    depends_on:
      logstash:
        condition: service_healthy

  gateway:
    build: gateway-service-end
    mem_limit: 512m
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGSTASH_ENDPOINT=${LOGSTASH_ENDPOINT}
    depends_on:
      logstash:
        condition: service_healthy

  composite:
    build: composite-service-end
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGSTASH_ENDPOINT=${LOGSTASH_ENDPOINT}
    depends_on:
      logstash:
        condition: service_healthy

  time:
    build: time-service-end
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGSTASH_ENDPOINT=${LOGSTASH_ENDPOINT}
    depends_on:
      logstash:
        condition: service_healthy