server:
  port: 8080
  tomcat:
    threads:
      max: 4

spring.application.name: composite-service

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

management:
  endpoint:
    health:
      show-details: "ALWAYS"
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true


resilience4j.ratelimiter:
  configs:
    instances:
      registerHealthIndicator: true

resilience4j:
  bulkhead:
    instances:
      time:
        maxConcurrentCalls: 2

  timelimiter:
    instances:
      time:
        timeoutDuration: 3s

  retry:
    instances:
      time:
        maxAttempts: 3
        waitDuration: 500
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        #enableRandomizedWait: true
        #randomizedWaitFactor: 0.5
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException

  circuitbreaker:
    instances:
      time:
        allowHealthIndicatorToFail: false
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        record-exceptions:
          - org.springframework.web.client.HttpServerErrorException
        ignoreExceptions:

---
spring.config.activate.on-profile: docker
server.port: 8080
eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/

