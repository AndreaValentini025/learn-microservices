server.port: 8080
spring.application.name: composite-service

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

# WARNING: Exposing all management endpoints over http should only be used during development, must be locked down in production!
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
management.health.circuitbreakers.enabled: true

server:
  tomcat:
    threads:
      max: 4

resilience4j:
  timelimiter:
    instances:
      time:
        timeoutDuration: 3s
  retry:
    instances:
      time:
        maxAttempts: 3
        waitDuration: 500
        # enableExponentialBackoff: true
        # exponentialBackoffMultiplier: 2
        # enableRandomizedWait: true
        # randomizedWaitFactor: 0.5

  circuitbreaker:
    instances:
      time:
        allowHealthIndicatorToFail: false
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        ignoreExceptions:

---
spring.config.activate.on-profile: docker
server.port: 8080
eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/

